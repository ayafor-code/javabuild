# Workflow to build a Java web application using Maven and create an artifact.

name: Java CI with Maven

# Controls when the workflow is triggered.
# In this case, it will run on every push to the 'main' branch.
on:
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  build:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Sets up the Java environment. We'll use a specific version and distribution.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # The main build step. This runs the Maven command to clean and package the project.
      # The 'package' goal will create the final distributable artifact (e.g., a .war file).
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # This step uploads the generated artifact to the workflow run.
      # This makes the .war file available for subsequent jobs (e.g., a deployment job).
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          # The name of the artifact. You'll use this name to download it later.
          name: java-web-app-artifact
          # The path to the artifact(s) to upload.
          # This assumes your Maven build places the .war file in the 'target/' directory.
          path: target/*.war
